apiVersion: apps/v1
kind: Deployment
metadata:
  name: customerapp
  namespace: java
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customerapp
  template:
    metadata:
      labels:
        app: customerapp
    spec:
      containers:
      - name: customerapp
        image: acr66169.azurecr.io/customertestapp:latest  
        ports:
        - containerPort: 8080
        - containerPort: 5432
        resources:
            requests:
              memory: 20Mi
              cpu: "0.25"
            limits:
              memory: 400Mi
              cpu: "1"
        env:
        - name: DB_HOST
          value: "52.234.228.159"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "rigsensor"
        - name: DB_USERNAME
          value: "postgres"
        - name: DB_PASSWORD
          value: "0000"
        - name: SERVER_PORT
          value: "8080"  # Enclosed in quotes
          
---
apiVersion: v1
kind: Service
metadata:
   name: customerapp
   namespace: java
spec:
   selector:
      app: customerapp
   ports:
      - name: port1
        protocol: TCP
        port: 80
        targetPort: 8080
      - name: port2
        protocol: TCP
        port: 5432
        targetPort: 5432
   type: ClusterIP  # Change to ClusterIP since you don't want a LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: customerapp-ingress
  namespace: java
spec:
  ingressClassName: azure-application-gateway
  rules:
  - http:
      paths:
      - path: /myapp/api/Rig  # Changed to absolute path
        backend:
          service:
            name: customerapp
            port:
              number: 80  # Adjust the port number according to your service configuration
        pathType: Prefix  # Matches any path starting with "/"
